{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/DELL/Desktop/AI_ASSISTANT/sachin-crayon-d/admin-app/pas-admin-app/src/app/api/airTable/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport Airtable from \"airtable\";\nexport async function GET() {\n  try {\n    const base = new Airtable({\n      apiKey: process.env.accessTokenKey,\n    }).base(process.env.baseKey);\n    let allRecords = [];\n    const records = await new Promise((resolve, reject) => {\n      const tempRecords = [];\n      base(\"Candidate\")\n        .select({ view: \"Grid view\" })\n        .eachPage(\n          (records, fetchNextPage) => {\n            records.forEach((record) => {\n              const fields = record.fields;\n\n              tempRecords.push(fields);\n            });\n            fetchNextPage();\n          },\n          (err) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(tempRecords);\n            }\n          }\n        );\n    });\n\n    return NextResponse.json({ data: records });\n  } catch (error) {\n    return NextResponse.json({ error: error.message }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,eAAe;IACpB,IAAI;QACF,MAAM,OAAO,IAAI,6IAAA,CAAA,UAAQ,CAAC;YACxB,QAAQ,QAAQ,GAAG,CAAC,cAAc;QACpC,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO;QAC3B,IAAI,aAAa,EAAE;QACnB,MAAM,UAAU,MAAM,IAAI,QAAQ,CAAC,SAAS;YAC1C,MAAM,cAAc,EAAE;YACtB,KAAK,aACF,MAAM,CAAC;gBAAE,MAAM;YAAY,GAC3B,QAAQ,CACP,CAAC,SAAS;gBACR,QAAQ,OAAO,CAAC,CAAC;oBACf,MAAM,SAAS,OAAO,MAAM;oBAE5B,YAAY,IAAI,CAAC;gBACnB;gBACA;YACF,GACA,CAAC;gBACC,IAAI,KAAK;oBACP,OAAO;gBACT,OAAO;oBACL,QAAQ;gBACV;YACF;QAEN;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,MAAM;QAAQ;IAC3C,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnE;AACF"}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}